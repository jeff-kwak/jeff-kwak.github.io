<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeff Kwak&#39;s Web Log</title>
    <link>https://jeffkwak.com/</link>
    <description>Recent content on Jeff Kwak&#39;s Web Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 03 Jul 2020 21:38:47 -0400</lastBuildDate>
    
	<atom:link href="https://jeffkwak.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a Unity3D Package for Stateless</title>
      <link>https://jeffkwak.com/posts/unity3d-package-for-stateless/</link>
      <pubDate>Wed, 29 Jul 2020 18:29:48 -0400</pubDate>
      
      <guid>https://jeffkwak.com/posts/unity3d-package-for-stateless/</guid>
      <description>One pattern that I depend on all the time is the State Machine pattern. It&amp;rsquo;s a great way to decouple inherit state from the game objects in your system. It&amp;rsquo;s a simple pattern that&amp;rsquo;s pretty simple to implement yourself, but there already happens to be a complete and robust library in the C# eco-system: Stateless. Also, unfortunate, you cannot use .NET&amp;rsquo;s package manager in Unity (that&amp;rsquo;d be a little weird but awesome).</description>
    </item>
    
    <item>
      <title>Using Unity&#39;s Input System with Cinemachine</title>
      <link>https://jeffkwak.com/posts/unity-input-system-cinemachine/</link>
      <pubDate>Sat, 25 Jul 2020 12:21:13 -0400</pubDate>
      
      <guid>https://jeffkwak.com/posts/unity-input-system-cinemachine/</guid>
      <description>In Unity3D (v2019.4.x), when you try to use the Cinemachine and the new Input System you will receive a slightly confusing error message:
 InvalidOperationException: You are trying to read Input using the UnityEngine.Input class, but you have switched active Input handling to Input System package in Player Settings.
 There&amp;rsquo;s a simple explanation for this. The old Input mechanism is still around, and still supported, and existing packages still have to support it.</description>
    </item>
    
    <item>
      <title>Starting Another New Blog</title>
      <link>https://jeffkwak.com/posts/starting-another-new-blog/</link>
      <pubDate>Fri, 03 Jul 2020 21:42:55 -0400</pubDate>
      
      <guid>https://jeffkwak.com/posts/starting-another-new-blog/</guid>
      <description>I am a Dark Matter Developer This is probably my fourth attempt at blogging. I&amp;rsquo;ve always realized that writing is important, but eventually I get busy with life or a project at work and let missing a few days turn into missing a few years. I swear I&amp;rsquo;m still out there building software, I&amp;rsquo;m just hard to see.
This is probably for an audience of one I&amp;rsquo;d like to keep this blog up and running for a change.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://jeffkwak.com/about/</link>
      <pubDate>Fri, 03 Jul 2020 21:38:47 -0400</pubDate>
      
      <guid>https://jeffkwak.com/about/</guid>
      <description>I&amp;rsquo;m Jeff Kwak. I&amp;rsquo;ve been a software engineer for a long time. Like most people of my generation, I first got into programming by typing in code from magazines to play games. Since then I&amp;rsquo;ve professionally developed for just about everything from 8-bit assembly language for micro-controllers all the way to modern distributed applications using microservices. I still love making the machine(s) do things; it still feels like a creative outlet.</description>
    </item>
    
  </channel>
</rss>