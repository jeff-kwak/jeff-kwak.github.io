<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package-manager on Jeff Kwak&#39;s Web Log</title>
    <link>https://jeffkwak.com/tags/package-manager/</link>
    <description>Recent content in package-manager on Jeff Kwak&#39;s Web Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 29 Jul 2020 18:29:48 -0400</lastBuildDate>
    
	<atom:link href="https://jeffkwak.com/tags/package-manager/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a Unity3D Package for Stateless</title>
      <link>https://jeffkwak.com/posts/unity3d-package-for-stateless/</link>
      <pubDate>Wed, 29 Jul 2020 18:29:48 -0400</pubDate>
      
      <guid>https://jeffkwak.com/posts/unity3d-package-for-stateless/</guid>
      <description>One pattern that I depend on all the time is the State Machine pattern. It&amp;rsquo;s a great way to decouple inherit state from the game objects in your system. It&amp;rsquo;s a simple pattern that&amp;rsquo;s pretty simple to implement yourself, but there already happens to be a complete and robust library in the C# eco-system: Stateless. Also, unfortunate, you cannot use .NET&amp;rsquo;s package manager in Unity (that&amp;rsquo;d be a little weird but awesome).</description>
    </item>
    
  </channel>
</rss>