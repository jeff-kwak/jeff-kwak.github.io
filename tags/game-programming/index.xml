<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>game-programming on Jeff Kwak&#39;s Web Log</title>
    <link>https://jeffkwak.com/tags/game-programming/</link>
    <description>Recent content in game-programming on Jeff Kwak&#39;s Web Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Aug 2020 10:02:05 -0400</lastBuildDate>
    
	<atom:link href="https://jeffkwak.com/tags/game-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Brackeys Game Jam 2020.2 Day 1</title>
      <link>https://jeffkwak.com/posts/brackeys-game-jam-2020-2-day-1/</link>
      <pubDate>Sat, 01 Aug 2020 10:02:05 -0400</pubDate>
      
      <guid>https://jeffkwak.com/posts/brackeys-game-jam-2020-2-day-1/</guid>
      <description>2020-08-01 0800H EDT Woke up and the jam has been going on for 2 hours already. The theme is &amp;ldquo;REWIND&amp;rdquo;. Time for coffee and to noodle on some ideas for the game.
2020-08-01 1000H EDT I have a couple of ideas around the theme. In no particular order:
 A maze game where you can only go backwards by a &amp;ldquo;REWIND&amp;rdquo;. You only get so many rewinds per level. A time traveler game.</description>
    </item>
    
    <item>
      <title>Creating a Unity3D Package for Stateless</title>
      <link>https://jeffkwak.com/posts/unity3d-package-for-stateless/</link>
      <pubDate>Wed, 29 Jul 2020 18:29:48 -0400</pubDate>
      
      <guid>https://jeffkwak.com/posts/unity3d-package-for-stateless/</guid>
      <description>One pattern that I depend on all the time is the State Machine pattern. It&amp;rsquo;s a great way to decouple inherit state from the game objects in your system. It&amp;rsquo;s a simple pattern that&amp;rsquo;s pretty simple to implement yourself, but there already happens to be a complete and robust library in the C# eco-system: Stateless. Also, unfortunate, you cannot use .NET&amp;rsquo;s package manager in Unity (that&amp;rsquo;d be a little weird but awesome).</description>
    </item>
    
    <item>
      <title>Using Unity&#39;s Input System with Cinemachine</title>
      <link>https://jeffkwak.com/posts/unity-input-system-cinemachine/</link>
      <pubDate>Sat, 25 Jul 2020 12:21:13 -0400</pubDate>
      
      <guid>https://jeffkwak.com/posts/unity-input-system-cinemachine/</guid>
      <description>In Unity3D (v2019.4.x), when you try to use the Cinemachine and the new Input System you will receive a slightly confusing error message:
 InvalidOperationException: You are trying to read Input using the UnityEngine.Input class, but you have switched active Input handling to Input System package in Player Settings.
 There&amp;rsquo;s a simple explanation for this. The old Input mechanism is still around, and still supported, and existing packages still have to support it.</description>
    </item>
    
  </channel>
</rss>